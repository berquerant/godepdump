// Code generated by "stringer -type=TypeType -output type_stringer_generated.go"; DO NOT EDIT.

package typesx

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Tunknown-0]
	_ = x[Tarray-1]
	_ = x[Tbasic-2]
	_ = x[Tchan-3]
	_ = x[Tinterface-4]
	_ = x[Tmap-5]
	_ = x[Tnamed-6]
	_ = x[Tpointer-7]
	_ = x[Tsignature-8]
	_ = x[Tslice-9]
	_ = x[Tstruct-10]
	_ = x[Ttuple-11]
	_ = x[TtypeParam-12]
	_ = x[Tunion-13]
}

const _TypeType_name = "TunknownTarrayTbasicTchanTinterfaceTmapTnamedTpointerTsignatureTsliceTstructTtupleTtypeParamTunion"

var _TypeType_index = [...]uint8{0, 8, 14, 20, 25, 35, 39, 45, 53, 63, 69, 76, 82, 92, 98}

func (i TypeType) String() string {
	if i < 0 || i >= TypeType(len(_TypeType_index)-1) {
		return "TypeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TypeType_name[_TypeType_index[i]:_TypeType_index[i+1]]
}
